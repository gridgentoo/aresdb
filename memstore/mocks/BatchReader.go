//  Copyright (c) 2017-2018 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import common "github.com/uber/aresdb/memstore/common"

import mock "github.com/stretchr/testify/mock"

// BatchReader is an autogenerated mock type for the BatchReader type
type BatchReader struct {
	mock.Mock
}

// GetDataValue provides a mock function with given fields: row, columnID
func (_m *BatchReader) GetDataValue(row int, columnID int) common.DataValue {
	ret := _m.Called(row, columnID)

	var r0 common.DataValue
	if rf, ok := ret.Get(0).(func(int, int) common.DataValue); ok {
		r0 = rf(row, columnID)
	} else {
		r0 = ret.Get(0).(common.DataValue)
	}

	return r0
}

// GetDataValueWithDefault provides a mock function with given fields: row, columnID, defaultValue
func (_m *BatchReader) GetDataValueWithDefault(row int, columnID int, defaultValue common.DataValue) common.DataValue {
	ret := _m.Called(row, columnID, defaultValue)

	var r0 common.DataValue
	if rf, ok := ret.Get(0).(func(int, int, common.DataValue) common.DataValue); ok {
		r0 = rf(row, columnID, defaultValue)
	} else {
		r0 = ret.Get(0).(common.DataValue)
	}

	return r0
}
