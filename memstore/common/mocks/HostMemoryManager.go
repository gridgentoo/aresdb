// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import common "github.com/uber/aresdb/memstore/common"
import mock "github.com/stretchr/testify/mock"

// HostMemoryManager is an autogenerated mock type for the HostMemoryManager type
type HostMemoryManager struct {
	mock.Mock
}

// GetArchiveMemoryUsageByTableShard provides a mock function with given fields:
func (_m *HostMemoryManager) GetArchiveMemoryUsageByTableShard() (map[string]map[string]*common.ColumnMemoryUsage, error) {
	ret := _m.Called()

	var r0 map[string]map[string]*common.ColumnMemoryUsage
	if rf, ok := ret.Get(0).(func() map[string]map[string]*common.ColumnMemoryUsage); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]map[string]*common.ColumnMemoryUsage)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ReportManagedObject provides a mock function with given fields: table, shard, batchID, columnID, bytes
func (_m *HostMemoryManager) ReportManagedObject(table string, shard int, batchID int, columnID int, bytes int64) {
	_m.Called(table, shard, batchID, columnID, bytes)
}

// ReportUnmanagedSpaceUsageChange provides a mock function with given fields: bytes
func (_m *HostMemoryManager) ReportUnmanagedSpaceUsageChange(bytes int64) {
	_m.Called(bytes)
}

// Start provides a mock function with given fields:
func (_m *HostMemoryManager) Start() {
	_m.Called()
}

// Stop provides a mock function with given fields:
func (_m *HostMemoryManager) Stop() {
	_m.Called()
}

// TriggerEviction provides a mock function with given fields:
func (_m *HostMemoryManager) TriggerEviction() {
	_m.Called()
}

// TriggerPreload provides a mock function with given fields: tableName, columnID, oldPreloadingDays, newPreloadingDays
func (_m *HostMemoryManager) TriggerPreload(tableName string, columnID int, oldPreloadingDays int, newPreloadingDays int) {
	_m.Called(tableName, columnID, oldPreloadingDays, newPreloadingDays)
}
